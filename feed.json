{
    "version": "https://jsonfeed.org/version/1",
    "title": "探索无极境",
    "subtitle": "寄蜉蝣于天地，渺沧海之一粟",
    "icon": "http://ranjingmo.github.io/images/favicon.ico",
    "description": "这里是染景默的温馨小窝",
    "home_page_url": "http://ranjingmo.github.io",
    "items": [
        {
            "id": "http://ranjingmo.github.io/2022/09/04/day01-%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82-%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%BF%B0%E5%92%8CMyBatisPlus%E4%BD%BF%E7%94%A8/",
            "url": "http://ranjingmo.github.io/2022/09/04/day01-%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82-%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%BF%B0%E5%92%8CMyBatisPlus%E4%BD%BF%E7%94%A8/",
            "title": "day01-硅谷课堂-项目概述和MyBatisPlus使用",
            "date_published": "2022-09-04T15:41:52.000Z",
            "content_html": "<p><img data-src=\"%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82-%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%BF%B0%E5%92%8CMyBatisPlus%E4%BD%BF%E7%94%A8/1.jpg\" alt=\"\" /></p>\n<h2 id=\"硅谷课程第一天-项目概述和mybatisplus使用\"><a class=\"anchor\" href=\"#硅谷课程第一天-项目概述和mybatisplus使用\">#</a> 硅谷课程第一天 - 项目概述和 MyBatisPlus 使用</h2>\n<p>[TOC]</p>\n<h3 id=\"一-硅谷课堂概述\"><a class=\"anchor\" href=\"#一-硅谷课堂概述\">#</a> 一、硅谷课堂概述</h3>\n<h4 id=\"1-项目介绍\"><a class=\"anchor\" href=\"#1-项目介绍\">#</a> 1、项目介绍</h4>\n<p>硅谷课堂是尚硅谷与腾讯云官方合作的项目，是一款基于微信公众号 B2C 模式的在线学习平台，该平台包含三大模块：直播、教学与微信消息服务；平台会定期推出直播课程，方便学员与名师之间的交流互动，学员也可以购买教学视频在线学习，分享直播与教学视频获取平台收益，平台支持直播、腾讯云视频点播、微信支付、微信授权登录、微信菜单、微信消息与腾讯云文件存储等一系列功能，为学员构建了一个全方位的在线学习平台。</p>\n<p>硅谷课堂项目具有很强的实用性，业务场景贴近实际，技术应用紧跟市场潮流，完全按照市场需求开发。既是对主流 Java 技术的系统性梳理和整合，同时也是各种主流技术实际应用的练兵场，能够帮助 Java 程序员积累项目经验。本套教程会在腾讯云开发者社区同步上线，你也可以在 “腾讯云开发者社区” 学习和下载教程。</p>\n<h4 id=\"2-硅谷课程流程图\"><a class=\"anchor\" href=\"#2-硅谷课程流程图\">#</a> 2、硅谷课程流程图</h4>\n<p><img data-src=\"%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82-%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%BF%B0%E5%92%8CMyBatisPlus%E4%BD%BF%E7%94%A8/yewuliucheng.png\" alt=\"img\" /></p>\n<h4 id=\"3-硅谷课堂功能架构\"><a class=\"anchor\" href=\"#3-硅谷课堂功能架构\">#</a> 3、硅谷课堂功能架构</h4>\n<p><img data-src=\"%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82-%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%BF%B0%E5%92%8CMyBatisPlus%E4%BD%BF%E7%94%A8/%E5%8A%9F%E8%83%BD%E6%9E%B6%E6%9E%84%E5%9B%BE.png\" alt=\"img\" /></p>\n<h4 id=\"4-硅谷课堂技术架构\"><a class=\"anchor\" href=\"#4-硅谷课堂技术架构\">#</a> 4、硅谷课堂技术架构</h4>\n<p>&lt;img src=&quot;%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82-%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%BF%B0%E5%92%8CMyBatisPlus%E4%BD%BF%E7%94%A8/jishujiagou.png&quot; alt=&quot;img&quot; style=&quot;zoom:100%;&quot; /&gt;</p>\n<h4 id=\"5-硅谷课堂核心技术\"><a class=\"anchor\" href=\"#5-硅谷课堂核心技术\">#</a> 5、硅谷课堂核心技术</h4>\n<h5 id=\"51-后端技术\"><a class=\"anchor\" href=\"#51-后端技术\">#</a> 5.1、后端技术</h5>\n<p>SpringBoot：简化新 Spring 应用的初始搭建以及开发过程</p>\n<p>SpringCloud：基于 Spring Boot 实现的云原生应用开发工具，SpringCloud 使用的技术：（Spring Cloud Gateway、Spring Cloud Alibaba Nacos、Spring Cloud Alibaba Sentinel、Spring Cloud Alibaba Seata、Spring Cloud Task 和 Spring Cloud Feign 等）</p>\n<p>MyBatis-Plus：持久层框架</p>\n<p>Redis：内存缓存</p>\n<p>RabbitMQ：消息中间件</p>\n<p>腾讯云：文件存储</p>\n<p>腾讯云：视频点播</p>\n<p>欢拓云直播：直播平台</p>\n<p>微信支付</p>\n<p>Nginx：负载均衡</p>\n<p>Lombok</p>\n<p>Mysql：关系型数据库</p>\n<h5 id=\"52-前端技术\"><a class=\"anchor\" href=\"#52-前端技术\">#</a> 5.2、前端技术</h5>\n<p>Vue.js：web 界面的渐进式框架</p>\n<p>Node.js： JavaScript 运行环境</p>\n<p>Axios：Axios 是一个基于 promise 的 HTTP 库</p>\n<p>NPM：包管理器</p>\n<p>Babel：转码器</p>\n<p>Webpack：打包工具</p>\n<h5 id=\"53-其他技术\"><a class=\"anchor\" href=\"#53-其他技术\">#</a> 5.3、其他技术</h5>\n<p>Docker ：容器技术</p>\n<p>Git：代码管理工具</p>\n<p>DockerFile：管理 Docker 镜像命令文本</p>\n<h3 id=\"二-技术点-mybatisplus\"><a class=\"anchor\" href=\"#二-技术点-mybatisplus\">#</a> 二、技术点 - MyBatisPlus</h3>\n<h4 id=\"1-mybatisplus简介\"><a class=\"anchor\" href=\"#1-mybatisplus简介\">#</a> 1、MyBatisPlus 简介</h4>\n<h5 id=\"11-概述\"><a class=\"anchor\" href=\"#11-概述\">#</a> 1.1、概述</h5>\n<p>官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYW9taWRvdS5jb20v\">https://baomidou.com/</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Jhb21pZG91L215YmF0aXMtcGx1cw==\">MyBatis-Plus</span>（简称 MP）是一个 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5teWJhdGlzLm9yZy9teWJhdGlzLTMv\">MyBatis</span> 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p>\n<h5 id=\"12-特性\"><a class=\"anchor\" href=\"#12-特性\">#</a> 1.2、特性</h5>\n<ul>\n<li><strong>无侵入</strong>：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li>\n<li><strong>损耗小</strong>：启动即会自动注入基本 CURD， 性能基本无损耗，直接面向对象操作</li>\n<li><strong>强大的 CRUD 操作</strong>：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求</li>\n<li><strong>支持 Lambda 形式调用</strong>：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错</li>\n<li><strong>支持多种数据库</strong>：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer2005、SQLServer 等多种数据库</li>\n<li><strong>支持主键自动生成</strong>：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题</li>\n<li><strong>支持 XML 热加载</strong>：Mapper 对应的 XML 支持热加载，对于简单的 CRUD 操作，甚至可以无 XML 启动</li>\n<li><strong>支持 ActiveRecord 模式</strong>：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作</li>\n<li><strong>支持自定义全局通用操作</strong>：支持全局通用方法注入（ Write once, use anywhere ）</li>\n<li><strong>支持关键词自动转义</strong>：支持数据库关键词（order、key......）自动转义，还可自定义关键词</li>\n<li><strong>内置代码生成器</strong>：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用</li>\n<li><strong>内置分页插件</strong>：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询</li>\n<li><strong>内置性能分析插件</strong>：可输出 Sql 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询</li>\n<li><strong>内置全局拦截插件</strong>：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作</li>\n<li><strong>内置 Sql 注入剥离器</strong>：支持 Sql 注入剥离，有效预防 Sql 注入攻击</li>\n</ul>\n<h4 id=\"2-mybatisplus入门\"><a class=\"anchor\" href=\"#2-mybatisplus入门\">#</a> 2、MyBatisPlus 入门</h4>\n<p><img data-src=\"%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82-%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%BF%B0%E5%92%8CMyBatisPlus%E4%BD%BF%E7%94%A8/image-20220412114912797.png\" alt=\"image-20220412114912797\" /></p>\n<h5 id=\"21-创建测试数据库和表\"><a class=\"anchor\" href=\"#21-创建测试数据库和表\">#</a> 2.1、创建测试数据库和表</h5>\n<p><strong>mybatis_plus</strong></p>\n<p>其表结构如下：</p>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>name</th>\n<th>age</th>\n<th>email</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Jone</td>\n<td>18</td>\n<td><span class=\"exturl\" data-url=\"bWFpbHRvOnRlc3QxQGJhb21pZG91LmNvbQ==\">test1@baomidou.com</span></td>\n</tr>\n<tr>\n<td>2</td>\n<td>Jack</td>\n<td>20</td>\n<td><span class=\"exturl\" data-url=\"bWFpbHRvOnRlc3QyQGJhb21pZG91LmNvbQ==\">test2@baomidou.com</span></td>\n</tr>\n<tr>\n<td>3</td>\n<td>Tom</td>\n<td>28</td>\n<td><span class=\"exturl\" data-url=\"bWFpbHRvOnRlc3QzQGJhb21pZG91LmNvbQ==\">test3@baomidou.com</span></td>\n</tr>\n<tr>\n<td>4</td>\n<td>Sandy</td>\n<td>21</td>\n<td><span class=\"exturl\" data-url=\"bWFpbHRvOnRlc3Q0QGJhb21pZG91LmNvbQ==\">test4@baomidou.com</span></td>\n</tr>\n<tr>\n<td>5</td>\n<td>Billie</td>\n<td>24</td>\n<td><span class=\"exturl\" data-url=\"bWFpbHRvOnRlc3Q1QGJhb21pZG91LmNvbQ==\">test5@baomidou.com</span></td>\n</tr>\n</tbody>\n</table>\n<p>其对应的建表语句如下：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">user</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    id <span class=\"token keyword\">BIGINT</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'主键ID'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'姓名'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    age <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'年龄'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    email <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'邮箱'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其对应的数据库 Data 脚本如下：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token keyword\">user</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jone'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test1@baomidou.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jack'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test2@baomidou.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Tom'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test3@baomidou.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Sandy'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test4@baomidou.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Billie'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test5@baomidou.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"22-创建项目和添加依赖\"><a class=\"anchor\" href=\"#22-创建项目和添加依赖\">#</a> 2.2、创建项目和添加依赖</h5>\n<p><strong>（1）使用 Spring Initializr 初始化 Spring Boot 工程</strong></p>\n<p>Group：com.atguigu</p>\n<p>Artifact：mybatis-plus</p>\n<p>版本：2.2.1.RELEASE</p>\n<p><strong>（2）项目引入依赖</strong></p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">&lt;!--mybatis-plus--></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.baomidou<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-plus-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.3.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">&lt;!--mysql--></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>mysql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mysql-connector-java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">&lt;!--lombok 用来简化实体类 --></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.projectlombok<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>lombok<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><strong>（3）idea 中安装 lombok 插件</strong></p>\n<p>&lt;img src=&quot;%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82-%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%BF%B0%E5%92%8CMyBatisPlus%E4%BD%BF%E7%94%A8/303533a2-0148-4329-a770-c4af5114b22c.png&quot;  /&gt;</p>\n<h5 id=\"23-创建配置文件\"><a class=\"anchor\" href=\"#23-创建配置文件\">#</a> 2.3、创建配置文件</h5>\n<p><strong>mysql5</strong></p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#mysql 数据库连接</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">spring.datasource.driver-class-name</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">com.mysql.jdbc.Driver</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">spring.datasource.url</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">jdbc:mysql://localhost:3306/mybatis_plus</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">spring.datasource.username</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">spring.datasource.password</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">123456</span></pre></td></tr></table></figure><p><strong>mysql8 以上（spring boot 2.1）注意：driver 和 url 的变化</strong></p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">spring.datasource.driver-class-name</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">com.mysql.cj.jdbc.Driver</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">spring.datasource.url</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">jdbc:mysql://localhost:3306/mybatis_plus?serverTimezone=GMT%2B8</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">spring.datasource.username</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">spring.datasource.password</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span></pre></td></tr></table></figure><p><strong>注意：</strong></p>\n<p>1、这里的 url 使用了？serverTimezone=GMT%2B8 后缀，因为 Spring Boot 2.1 集成了 8.0 版本的 jdbc 驱动，这个版本的 jdbc 驱动需要添加这个后缀，否则运行测试用例报告如下错误：</p>\n<p>java.sql.SQLException: The server time zone value 'ÖÐ¹ú±ê×¼Ê±¼ä' is unrecognized or represents more</p>\n<p>2、这里的 driver-class-name 使用了 com.mysql.cj.jdbc.Driver ，在 jdbc 8 中 建议使用这个驱动，之前的 com.mysql.jdbc.Driver 已经被废弃，否则运行测试用例的时候会有 WARN 信息</p>\n<h5 id=\"24-编写代码\"><a class=\"anchor\" href=\"#24-编写代码\">#</a> 2.4、编写代码</h5>\n<p><strong>（1）创建启动类</strong></p>\n<p>在 Spring Boot 启动类中添加  <code>@MapperScan</code>  注解，扫描 Mapper 文件夹</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@MapperScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.atguigu.mybatisplus.mapper\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MybatisPlusApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>（2）创建实体类</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Data</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> email<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>（3）创建 Mapper</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">UserMapper</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>（4）功能测试 - 查询所有记录</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MybatisPlusApplicationTests</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserMapper</span> userMapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelectList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----- selectAll method test ------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">//UserMapper 中的 selectList () 方法的参数为 MP 内置的条件封装器 Wrapper</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 所以不填写就是无任何条件</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        users<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>注意：</strong></p>\n<p>IDEA 在 userMapper 处报错，因为找不到注入的对象，因为类是动态创建的，但是程序可以正确的执行。</p>\n<p>为了避免报错，可以在 dao 层 的接口上添加 @Repository 注解</p>\n<h4 id=\"3-mybatisplus实现crud操作\"><a class=\"anchor\" href=\"#3-mybatisplus实现crud操作\">#</a> 3、MyBatisPlus 实现 CRUD 操作</h4>\n<h5 id=\"31-插入操作\"><a class=\"anchor\" href=\"#31-插入操作\">#</a> 3.1、插入操作</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CRUDTests</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserMapper</span> userMapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testInsert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        user<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mary\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        user<span class=\"token punctuation\">.</span><span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        user<span class=\"token punctuation\">.</span><span class=\"token function\">setEmail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"atguigu@qq.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 影响的行数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//id 自动回填</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>** 注意：** 数据库插入 id 值默认为：全局唯一 id</p>\n<p><img data-src=\"%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82-%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%BF%B0%E5%92%8CMyBatisPlus%E4%BD%BF%E7%94%A8/93ff417f-c9f7-4225-b395-2afe2776183d.jpg\" alt=\"\" /></p>\n<p><strong>查看 sql 输出日志</strong></p>\n<p>加在当前项目的配置文件中</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#mybatis 日志</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">mybatis-plus.configuration.log-impl</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">org.apache.ibatis.logging.stdout.StdOutImpl</span></pre></td></tr></table></figure><p>在控制台可以看到输出日志</p>\n<p><img data-src=\"%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82-%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%BF%B0%E5%92%8CMyBatisPlus%E4%BD%BF%E7%94%A8/image-20220904202933510.png\" alt=\"image-20220904202933510\" /></p>\n<h5 id=\"32-主键策略\"><a class=\"anchor\" href=\"#32-主键策略\">#</a> 3.2、主键策略</h5>\n<p><strong>（1）ID_WORKER</strong></p>\n<p>MyBatis-Plus 默认的主键策略是：ID_WORKER  <em>全局唯一 ID</em></p>\n<p><strong>（2）自增策略</strong></p>\n<ul>\n<li>\n<p>要想主键自增需要配置如下主键策略</p>\n</li>\n<li>\n<ul>\n<li>需要在创建数据表的时候设置主键自增</li>\n<li>表主键字段类型是 int 类型，increment_int，BigInt</li>\n<li>实体字段中配置 @TableId (type = IdType.AUTO)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@TableId</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">=</span> <span class=\"token class-name\">IdType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AUTO</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其它主键策略：分析 IdType 源码可知</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">IdType</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * 数据库 ID 自增</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">AUTO</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     * 该类型为未设置主键类型</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">NONE</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     * 用户输入 ID</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     * 该类型可以通过自己注册自动填充插件进行填充</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     */</span>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">INPUT</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     * 全局唯一 ID</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     * 默认策略，雪花算法，生成 19 位数字值</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     */</span>    </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">ASSIGN_ID</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>     * 全局唯一 ID (UUID)</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>     * 生成数字和字母</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>     * 缺点：有字母不能排序</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token function\">ASSIGN_UUID</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">/** @deprecated */</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token annotation punctuation\">@Deprecated</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token function\">ID_WORKER</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">/** @deprecated */</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token annotation punctuation\">@Deprecated</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token function\">ID_WORKER_STR</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\">/** @deprecated */</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token annotation punctuation\">@Deprecated</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token function\">UUID</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">IdType</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> key<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"33-根据id更新操作\"><a class=\"anchor\" href=\"#33-根据id更新操作\">#</a> 3.3、根据 Id 更新操作</h5>\n<p>** 注意：**update 时生成的 sql 自动是动态 sql：UPDATE user SET age=? WHERE id=?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testUpdateById</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">//1 根据 id 查询记录</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectById</span><span class=\"token punctuation\">(</span><span class=\"token number\">1L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">//2 设置修改的值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        user<span class=\"token punctuation\">.</span><span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//3 调用方法修改</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">updateById</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"34-分页查询\"><a class=\"anchor\" href=\"#34-分页查询\">#</a> 3.4、分页查询</h5>\n<p>MyBatis Plus 自带分页插件，只要简单的配置即可实现分页功能</p>\n<p><strong>（1）创建配置类</strong></p>\n<p>在项目包下创建 config 包，创建 MpConfig 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MpConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * 分页插件</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">PaginationInterceptor</span> <span class=\"token function\">paginationInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PaginationInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>（2）测试 selectPage 分页</strong></p>\n<p>** 测试：** 最终通过 page 对象获取相关数据</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelectPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 创建 page 对象，传递两个参数：当前页\t每页显示记录数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 调用 mp 方法实现分页</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectPage</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    page<span class=\"token punctuation\">.</span><span class=\"token function\">getRecords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">getPages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">getTotal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">hasPrevious</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>控制台 sql 语句打印： <code>SELECT id,name,age,email,create_time,update_time FROM user LIMIT 0,5</code></p>\n<h5 id=\"35-根据id删除记录\"><a class=\"anchor\" href=\"#35-根据id删除记录\">#</a> 3.5、根据 id 删除记录</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testDeleteById</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteById</span><span class=\"token punctuation\">(</span><span class=\"token number\">8L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"36-批量删除\"><a class=\"anchor\" href=\"#36-批量删除\">#</a> 3.6、批量删除</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testDeleteBatchIds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteBatchIds</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"37-逻辑删除\"><a class=\"anchor\" href=\"#37-逻辑删除\">#</a> 3.7、逻辑删除</h5>\n<ul>\n<li>物理删除：真实删除，将对应数据从数据库中删除，之后查询不到此条被删除数据</li>\n<li>逻辑删除：假删除，将对应数据中代表是否被删除字段状态修改为 “被删除状态”，之后在数据库中仍旧能看到此条数据记录，<strong>本质：修改操作</strong></li>\n</ul>\n<p><strong>（1）数据库中添加 deleted 字段</strong></p>\n<pre><code>ALTER TABLE `user` ADD COLUMN `deleted` boolean\n</code></pre>\n<p><strong>（2）实体类添加 deleted 字段</strong></p>\n<p>并加上 @TableLogic 注解</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@TableLogic</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> deleted<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>（3）application.properties 加入配置</strong></p>\n<p>此为默认值，如果你的默认值和 mp 默认的一样，该配置可无</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">mybatis-plus.global-config.db-config.logic-delete-value</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">mybatis-plus.global-config.db-config.logic-not-delete-value</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">0</span></pre></td></tr></table></figure><p><strong>（5）测试逻辑删除</strong></p>\n<ul>\n<li>测试后发现，数据并没有被删除，deleted 字段的值由 0 变成了 1</li>\n<li>测试后分析打印的 sql 语句，是一条 update</li>\n<li>** 注意：** 被删除数据的 deleted 字段的值必须是 0，才能被选取出来执行逻辑删除的操作</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 测试 逻辑删除</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testLogicDelete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteById</span><span class=\"token punctuation\">(</span><span class=\"token number\">1L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>（7）测试逻辑删除后的查询</strong></p>\n<p>MyBatis Plus 中查询操作也会自动添加逻辑删除字段的判断</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 测试 逻辑删除后的查询：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * 不包括被逻辑删除的记录</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testLogicDeleteSelect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    users<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>测试后分析打印的 sql 语句，包含  <code>WHERE deleted=0</code></p>\n<p><code>SELECT id,name,age,email,create_time,update_time,deleted FROM user WHERE deleted=0</code></p>\n<h4 id=\"4-mybatisplus条件构造器\"><a class=\"anchor\" href=\"#4-mybatisplus条件构造器\">#</a> 4、MyBatisPlus 条件构造器</h4>\n<p><img data-src=\"%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82-%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%BF%B0%E5%92%8CMyBatisPlus%E4%BD%BF%E7%94%A8/image-20220221114301672.png\" alt=\"\" /></p>\n<p>Wrapper ： 条件构造抽象类，最顶端父类</p>\n<p>AbstractWrapper ： 用于查询条件封装，生成 sql 的 where 条件</p>\n<p>​    QueryWrapper ： Entity 对象封装操作类，不是用 lambda 语法</p>\n<p>​    UpdateWrapper ： Update 条件封装，用于 Entity 对象更新操作</p>\n<p>AbstractLambdaWrapper ： Lambda 语法使用 Wrapper 统一处理解析 lambda 获取 column。</p>\n<p>​    LambdaQueryWrapper ：看名称也能明白就是用于 Lambda 语法使用的查询 Wrapper</p>\n<p>​    LambdaUpdateWrapper ： Lambda 更新封装 Wrapper</p>\n<p><strong>注意：以下条件构造器的方法入参中的  <code>column </code> 均表示数据库字段</strong></p>\n<h5 id=\"41-querywrapper-使用\"><a class=\"anchor\" href=\"#41-querywrapper-使用\">#</a> 4.1、QueryWrapper 使用</h5>\n<p><strong>（1）ge、gt、le、lt</strong> 大于等于、大于、小于等于、小于</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> queryWrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    queryWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">ge</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectList</span><span class=\"token punctuation\">(</span>queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>SELECT id,name,age,email,deleted FROM user WHERE deleted=0 AND (age &gt;=?)</code></p>\n<p><strong>（2）eq、ne</strong> 等于、不等于</p>\n<p>** 注意：**seletOne 返回的是一条实体记录，当出现多条时会报错</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelectOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> queryWrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    queryWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectOne</span><span class=\"token punctuation\">(</span>queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>SELECT id,name,age,email,create_time,update_time,deleted,version FROM user WHERE deleted=0 AND name = ?</p>\n<p><strong>（3）like、likeLeft、likeRight</strong>  模糊查询，百分号在左（以开头），百分号在右（以结尾）</p>\n<p>selectMaps 返回 Map 集合列表</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelectMaps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> queryWrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    queryWrapper</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">like</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"e\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">likeRight</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> maps <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectMaps</span><span class=\"token punctuation\">(</span>queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 返回值是 Map 列表</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    maps<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>SELECT id,name,age,email,create_time,update_time,deleted,version</p>\n<p>FROM user WHERE deleted=0 AND name LIKE ? AND email LIKE ?</p>\n<p><strong>（4）orderByDesc、orderByAsc</strong> 排序、降序、升序</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelectListOrderBy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> queryWrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    queryWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">orderByDesc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectList</span><span class=\"token punctuation\">(</span>queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    users<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>SELECT id,name,age,email,create_time,update_time,deleted,version</p>\n<p>FROM user WHERE deleted=0 ORDER BY id DESC</p>\n<h5 id=\"42-lambdaquerywrapper-使用\"><a class=\"anchor\" href=\"#42-lambdaquerywrapper-使用\">#</a> 4.2、LambdaQueryWrapper  使用</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testLambdaQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">LambdaQueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> queryWrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LambdaQueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    queryWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token operator\">::</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    queryWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">like</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token operator\">::</span><span class=\"token function\">getName</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"张\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectList</span><span class=\"token punctuation\">(</span>queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>SELECT id,name,age,email,create_time,update_time,deleted,version</p>\n<p>FROM user WHERE deleted=0 AND age = ? AND name LIKE ?</p>\n<h4 id=\"5-mybatisplus封装service层\"><a class=\"anchor\" href=\"#5-mybatisplus封装service层\">#</a> 5、MyBatisPlus 封装 Service 层</h4>\n<h5 id=\"51-创建service\"><a class=\"anchor\" href=\"#51-创建service\">#</a> 5.1、创建 service</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">UserService</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IService</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"52-创建service实现类\"><a class=\"anchor\" href=\"#52-创建service实现类\">#</a> 5.2、创建 service 实现类</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserServiceImpl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ServiceImpl</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserMapper</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">UserService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>底层封装了注入 Mapper 过程</strong></p>\n<p><img data-src=\"%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82-%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%BF%B0%E5%92%8CMyBatisPlus%E4%BD%BF%E7%94%A8/image-20220412115210448.png\" alt=\"image-20220412115210448\" /></p>\n<h5 id=\"53-方法调用测试\"><a class=\"anchor\" href=\"#53-方法调用测试\">#</a> 5.3、方法调用测试</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootTest</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">TestApplicationTests</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 注入 service</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserService</span> userService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 查询表所有数据</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> userList <span class=\"token operator\">=</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> user<span class=\"token operator\">:</span>userList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "微课堂项目",
                "项目",
                "微服务"
            ]
        },
        {
            "id": "http://ranjingmo.github.io/2022/09/04/HEXO-shoka%E6%90%AD%E5%BB%BA%E7%BB%86%E8%8A%82%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/",
            "url": "http://ranjingmo.github.io/2022/09/04/HEXO-shoka%E6%90%AD%E5%BB%BA%E7%BB%86%E8%8A%82%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/",
            "title": "HEXO+shoka搭建细节问题汇总",
            "date_published": "2022-09-04T06:56:23.000Z",
            "content_html": "<h2 id=\"开始\"><a class=\"anchor\" href=\"#开始\">#</a> 开始</h2>\n<p>首先简单介绍一下 Hexo ，Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown 或其他渲染引擎解析文章，在几秒内，即可利用靓丽的主题生成静态网页。现在我们开始搭建 Hexo ，详细步骤可参考官网<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3Mv\">指南</span>。</p>\n<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL25vZGVqcy5vcmcv\">Node.js</span> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2dpdC1zY20uY29tLw==\">Git</span></li>\n</ul>\n<p>如果你的电脑中已经安装上述必备程序，那么可以直接开始执行以下命令安装 Hexo。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> hexo-cli</pre></td></tr></table></figure><h2 id=\"建站\"><a class=\"anchor\" href=\"#建站\">#</a> 建站</h2>\n<p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要目录文件。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo init <span class=\"token operator\">&lt;</span>folder<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">&lt;</span>folder<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><p><strong>注意！！！</strong>：由于国内访问 GitHub 困难， <code>$ npm install</code>  将会下载老版本插件，导致后续安装其他插件失败！</p>\n<p>因此 <code>$ npm install</code>  之前提前设置 npm 源。我这里使用的是淘宝的镜像源</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry https://registry.npm.taobao.org</pre></td></tr></table></figure><p>全局配置文件 _config.yml 保存网站的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvY29uZmlndXJhdGlvbg==\">配置</span> 信息，你可以在此配置大部分的参数。项目清单文件 package.json 存储所有已安装软件包的名称和版本信息。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"hexo-site\"</span>,</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token string\">\"version\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"0.0.0\"</span>,</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token string\">\"private\"</span><span class=\"token builtin class-name\">:</span> true,</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token string\">\"hexo\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token string\">\"version\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span>,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token string\">\"dependencies\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token string\">\"hexo\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"^3.8.0\"</span>,</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">\"hexo-generator-archive\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"^0.1.5\"</span>,</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token string\">\"hexo-generator-category\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"^0.1.3\"</span>,</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token string\">\"hexo-generator-index\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"^0.2.1\"</span>,</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token string\">\"hexo-generator-tag\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"^0.2.0\"</span>,</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token string\">\"hexo-renderer-ejs\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"^0.3.1\"</span>,</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token string\">\"hexo-renderer-stylus\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"^0.3.3\"</span>,</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">\"hexo-renderer-marked\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"^0.3.2\"</span>,</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token string\">\"hexo-server\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"^0.3.3\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>如果要更换 Hexo 版本，修改 package.json 中 dependencies 配置项。</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">\"hexo\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^5.0.0\"</span></pre></td></tr></table></figure><p>执行 npm update 命令更新版本。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> update</pre></td></tr></table></figure><h3 id=\"依赖\"><a class=\"anchor\" href=\"#依赖\">#</a> 依赖</h3>\n<p>Hexo 构建目录下执行安装依赖。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> i</pre></td></tr></table></figure><h3 id=\"插件\"><a class=\"anchor\" href=\"#插件\">#</a> 插件</h3>\n<p>Hexo 构建目录下执行安装插件。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><h3 id=\"启动\"><a class=\"anchor\" href=\"#启动\">#</a> 启动</h3>\n<p>启动服务，默认访问网址为： <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo0MDAwLyVFMyU4MCU4Mg==\">http://localhost:4000/。</span></p>\n<pre><code class=\"language-ba\">$ hexo server\n或者\n$ hexo s\n</code></pre>\n<p>注意：每次修改网站都可以通过本地地址预先查看效果，省去时间精力。</p>\n<h3 id=\"部署\"><a class=\"anchor\" href=\"#部署\">#</a> 部署</h3>\n<p>我们继续将 Hexo 博客部署至 Github。</p>\n<p>1、创建 GitHub 仓库，网上教程很多，不多赘述。</p>\n<p>2、Github 仓库创建完成之后，修改 Hexo 全局配置文件 _config.yml ，在末尾追加以下配置项， repo 填写个人仓库对应地址。</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> git@github.com<span class=\"token punctuation\">:</span>RANJINGMO/RANJINGMO.github.io.git</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> main</pre></td></tr></table></figure><p><strong>注意</strong>：repo 个人仓库地址后面添加.git</p>\n<p>3、部署代码到 GitHub，需要提前配置 Github SSH 密钥，如果已经设置可不用再配置，如果没有配置可参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NhaV9kZUxvbmcvYXJ0aWNsZS9kZXRhaWxzLzEyMDQxMDgzMw==\">该文章</span>，配置完成之后执行以下命令部署。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo clean</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ hexo g\t<span class=\"token comment\"># 生成静态文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ hexo d\t<span class=\"token comment\"># 部署代码到 GitHub 上</span></pre></td></tr></table></figure><p>4、浏览器输入 <a href=\"https://RANJINGMO.github.io/\">https://RANJINGMO.github.io/</a> 就可以访问到我们的个人博客，如果部署后立即访问发现访问不到，那么需要再过一会再访问，一般都是 GitHub 抽风了。</p>\n<h2 id=\"主题\"><a class=\"anchor\" href=\"#主题\">#</a> 主题</h2>\n<p>我们已经完成 Hexo 默认安装以及部署，现在我们使用的是默认的 landscape 主题，我们可以使用其他主题加载我们的个人博客。</p>\n<h3 id=\"theme-shoka\"><a class=\"anchor\" href=\"#theme-shoka\">#</a> Theme Shoka</h3>\n<p>Shoka 主题相关链接如下。</p>\n<pre><code>主题主页：https://shoka.lostyu.me/\n文档说明：https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/\n基本配置: https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/config/\n页面配置: https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/display/\n依赖插件: https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/dependents/\n</code></pre>\n<h3 id=\"1-快速安装\"><a class=\"anchor\" href=\"#1-快速安装\">#</a> 1、快速安装</h3>\n<p>1、在 Hexo 构建目录下执行 Git 命令下载主题。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> clone https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka</pre></td></tr></table></figure><p>2、让这个主题生效，需要修改全局配置文件  <code>/_config.yml </code> ，把主题改为 shoka 。</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">theme</span><span class=\"token punctuation\">:</span> shoka</pre></td></tr></table></figure><h3 id=\"2-快速开始\"><a class=\"anchor\" href=\"#2-快速开始\">#</a> 2、快速开始</h3>\n<p>Shoka 主题需要的相关依赖插件。</p>\n<table>\n<thead>\n<tr>\n<th><strong>插件名称</strong></th>\n<th>npm 地址</th>\n<th><strong>功能</strong></th>\n<th><strong>依赖程度</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hexo-renderer-multi-markdown-it</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">链接</span></td>\n<td>md 文件渲染器，压缩 css/js/html</td>\n<td>必需</td>\n</tr>\n<tr>\n<td>hexo-autoprefixer</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hdXRvcHJlZml4ZXI=\">链接</span></td>\n<td>给生成的 css 文件们添加浏览器前缀</td>\n<td>必需</td>\n</tr>\n<tr>\n<td>hexo-algoliasearch</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hbGdvbGlhc2VhcmNo\">链接</span></td>\n<td>站内搜索功能</td>\n<td>搜索按钮失灵</td>\n</tr>\n<tr>\n<td>hexo-symbols-count-time</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1zeW1ib2xzLWNvdW50LXRpbWU=\">链接</span></td>\n<td>文章或站点字数及阅读时间统计</td>\n<td>统计没有</td>\n</tr>\n<tr>\n<td>hexo-feed</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1mZWVk\">链接</span></td>\n<td>生成 Feed 文件</td>\n<td>Feed 文件没有</td>\n</tr>\n</tbody>\n</table>\n<p>[^]: 没有正确安装以上插件的话，本主题会报错 or 无法正确显示 or 部分功能失效。 hexo-renderer-multi-markdown-it 请注意升级到最新版</p>\n<p><strong>注意</strong>：若安装报 npm WARN deprecated 等错误，就是 npm install 下载的不是最新插件，解决办法就是 npm 源转到国内镜像源，具体做法见建站部分。若已安装，换源之后更新即可。</p>\n<p>依次执行 npm 安装命令开始安装相关依赖插件。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> i hexo-renderer-multi-markdown-it <span class=\"token parameter variable\">--save</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">npm</span> i hexo-autoprefixer <span class=\"token parameter variable\">--save</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ <span class=\"token function\">npm</span> i hexo-algolia <span class=\"token parameter variable\">--save</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ <span class=\"token function\">npm</span> i hexo-algoliasearch <span class=\"token parameter variable\">--save</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>$ <span class=\"token function\">npm</span> i hexo-symbols-count-time <span class=\"token parameter variable\">--save</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>$ <span class=\"token function\">npm</span> i hexo-feed <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><h3 id=\"3-主题配置文件\"><a class=\"anchor\" href=\"#3-主题配置文件\">#</a> 3、主题配置文件</h3>\n<p>Shoka 主题配置文件 /shoka/_config.yml，具体设置可以参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5Lw==\">官方配置</span>，或者<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JyYWRfUGlUdDcvYXJ0aWNsZS9kZXRhaWxzLzEyNTcxMjg3NC8=\">优秀范例</span></p>\n<h3 id=\"4-全局配置文件\"><a class=\"anchor\" href=\"#4-全局配置文件\">#</a> 4、全局配置文件</h3>\n<p>全局配置文件 _config.yml 的使用参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvY29uZmlndXJhdGlvbg==\">官网</span>，基本照着官网来就好</p>\n<h3 id=\"5-编译部署\"><a class=\"anchor\" href=\"#5-编译部署\">#</a> 5、编译部署</h3>\n<p>配置文件修改完成之后再执行一遍 hexo clean &amp; hexo deploy 即可重新部署。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo clean</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><h3 id=\"6-全局搜索\"><a class=\"anchor\" href=\"#6-全局搜索\">#</a> 6、全局搜索</h3>\n<p>全局搜索 Algolia 的配置参考以下文章：<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ1MjM0NTEwL2FydGljbGUvZGV0YWlscy8xMTY4ODU3OTI=\">Hexo 集成 Algolia</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1NDc5NDY4L2FydGljbGUvZGV0YWlscy8xMDczMzU2NjM=\">Hexo 增加 Algolia 功能</span><br />\n完成 Algolia 注册之后，在全局配置文件中完成相关配置项：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">algolia</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">appId</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your appId</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">apiKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your apiKey</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">adminApiKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your adminApiKey</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">chunkSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">indexName</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#\"shoka\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">fields</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">-</span> title <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">-</span> path <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">-</span> categories <span class=\"token comment\">#推荐配置</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">-</span> content<span class=\"token punctuation\">:</span>strip<span class=\"token punctuation\">:</span>truncate<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2000</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">-</span> gallery</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">-</span> photos</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">-</span> tags</pre></td></tr></table></figure><p><strong>注意！！！</strong>：appId，apiKey，adminApiKey，indexName 千万别搞错！否则会出现类似下面的报错</p>\n<pre><code>Error has occurred during clearing index : [object Object]\n</code></pre>\n<p>1appId，2apiKey，3adminApiKey，4indexName 分别在如图位置</p>\n<p><img data-src=\"%E6%90%AD%E5%BB%BA%E7%BB%86%E8%8A%82%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-09-04%20162931.png\" alt=\"屏幕截图 2022-09-04 162931\" /></p>\n<h3 id=\"7-评论系统\"><a class=\"anchor\" href=\"#7-评论系统\">#</a> 7、评论系统</h3>\n<p>无后端评论系统 Valine ，首先完成 <span class=\"exturl\" data-url=\"aHR0cHM6Ly92YWxpbmUuanMub3JnL3F1aWNrc3RhcnQuaHRtbA==\">如何获取 LeanCloud 的 appId 和 appKey</span>。<br />\n完成注册之后开始主题配置文件中完成相关配置项：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">valine</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">appId</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your_appId</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">appKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your_appkey</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">placeholder</span><span class=\"token punctuation\">:</span> ヽ(○´∀`)ﾉ♪ <span class=\"token comment\"># Comment box placeholder</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">avatar</span><span class=\"token punctuation\">:</span> mp <span class=\"token comment\"># Gravatar style : mp, identicon, monsterid, wavatar, robohash, retro</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">pageSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span> <span class=\"token comment\"># Pagination size</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">lang</span><span class=\"token punctuation\">:</span> zh<span class=\"token punctuation\">-</span>CN</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">visitor</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 文章访问量统计</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">NoRecordIP</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 不记录 IP</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">serverURLs</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">powerMode</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 默认打开评论框输入特效</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">tagMeta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">visitor</span><span class=\"token punctuation\">:</span> 新朋友</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">master</span><span class=\"token punctuation\">:</span> 主人</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">friend</span><span class=\"token punctuation\">:</span> 小伙伴</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">investor</span><span class=\"token punctuation\">:</span> 金主粑粑</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token key atrule\">tagColor</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">master</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"var(--color-orange)\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token key atrule\">friend</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"var(--color-aqua)\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token key atrule\">investor</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"var(--color-pink)\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token key atrule\">tagMember</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">master</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token comment\"># - hash of master@email.com</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token comment\"># - hash of master2@email.com</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token key atrule\">friend</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token comment\"># - hash of friend@email.com</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token comment\"># - hash of friend2@email.com</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token key atrule\">investor</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token comment\"># - hash of investor1@email.com</span></pre></td></tr></table></figure><h3 id=\"8-图片-头像\"><a class=\"anchor\" href=\"#8-图片-头像\">#</a> 8、图片 &amp; 头像</h3>\n<p>要修改一些图片如头像，可以在 <code>\\themes\\shoka\\source\\images</code>  路径下修改，直接替换，要<strong>同名</strong>！</p>\n<p><strong>注意</strong>：若主题配置文件_config.shoka.yml 中 <code>statics</code>  为 <code>/</code> ，则加载的是库中的图片，若为 <code>//cdn.jsdelivr.net/gh/username/RepositoryName@latest/</code> ，则加载的图床中的图片。若为库中图片，则本地库上传至 GitHub 库中会大量占用空间，推荐使用图床，这里我使用的本地库。那么，在上传 GitHub 时很有可能出现上传失败，出现错误</p>\n<pre><code class=\"language-b\">error: RPC failed; curl 56 OpenSSL SSL_read: Connection was reset, errno 10054 send-pack: unexpected disconnect while reading sideband packet fatal: the remote end hung up unexpectedly Everything up-to-date FATAL Something's wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html\n</code></pre>\n<p>，解决方法是修改 git 提交文件大小上限，依次执行：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> init</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">git</span> config http.postBuffer <span class=\"token number\">524288000</span></pre></td></tr></table></figure><h2 id=\"发布博客\"><a class=\"anchor\" href=\"#发布博客\">#</a> 发布博客</h2>\n<p>部署完成之后我们开始写一篇文章，该步骤<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4MTQwMjkyL2FydGljbGUvZGV0YWlscy8xMTkwNzY0MDA=\">参考文章</span>。</p>\n<h2 id=\"创建文章\"><a class=\"anchor\" href=\"#创建文章\">#</a> 创建文章</h2>\n<p>其中 title 为文章的标题。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"title\"</span></pre></td></tr></table></figure><p>执行完成后 hexo 会根据目录下 scaffolds/post.md，在 source/_posts 文件夹下创建一个名为 <span class=\"exturl\" data-url=\"aHR0cDovL3RpdGxlLm1k\">title.md</span> 的文件。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: hello-world</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>date: <span class=\"token number\">2022</span>-06-23 01:03:24</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>tags:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>balabala<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr></table></figure><p>接下来你就可以正式开始写文章了。</p>\n<h2 id=\"部署文章\"><a class=\"anchor\" href=\"#部署文章\">#</a> 部署文章</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo g <span class=\"token parameter variable\">-c</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ hexo s</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ hexo d</pre></td></tr></table></figure><p>执行完成之后再次访问就可以看到内容了～</p>\n<h2 id=\"访问博客\"><a class=\"anchor\" href=\"#访问博客\">#</a> 访问博客</h2>\n<h3 id=\"个人域名访问\"><a class=\"anchor\" href=\"#个人域名访问\">#</a> 个人域名访问</h3>\n<p>我们的博客已经可以通过 <a href=\"https://RANJINGMO.github.io/\">https://RANJINGMO.github.io/</a> 链接的形式进行访问，那么如何以其他域名的形式进行访问呢？首先需要注册一个腾讯云账户，在腾讯云上买一个域名，例如域名为 pitt1997.cloud，然后设置登录 GitHub，进入之前创建的仓库，点击 Settings - Code and automation - Pages 设置 Custom domain，输入你的域名，然后直接访问 <span class=\"exturl\" data-url=\"aHR0cDovL1JBTkdKSU5HTU8uY2xvdWQ=\">http://RANGJINGMO.cloud</span> 就可以访问到博客。</p>\n<h3 id=\"seo-优化-站点收录\"><a class=\"anchor\" href=\"#seo-优化-站点收录\">#</a> SEO 优化 &amp; 站点收录</h3>\n<p>由于 GitHub 拒绝百度对它爬虫，所以正常是百度搜索不到我们的网站的，若要搜索到需要通过 Vercel 实现，但是我尝试了之后发现若想有自己的 cdn 域，必须先买一个域，所以不再尝试。</p>\n<p>小伙伴若想尝试可以阅读该<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JyYWRfUGlUdDcvYXJ0aWNsZS9kZXRhaWxzLzEyNTcxMjg3NA==\">文章</span></p>\n<h2 id=\"维护博客\"><a class=\"anchor\" href=\"#维护博客\">#</a> 维护博客</h2>\n<p>如果你现在在自己的笔记本上写的博客，部署在了网站上，那么你在家里用台式机，或者实验室的台式机，发现你电脑里面没有博客的文件，此时可以把博客的源码放到 Git 的私有仓库进行个人维护。</p>\n<h2 id=\"相关参考\"><a class=\"anchor\" href=\"#相关参考\">#</a> 相关参考</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM3NzgxMzA0L2FydGljbGUvZGV0YWlscy84MjcyOTAyOT9zcG09MTAwMS4yMTAxLjMwMDEuNjY1MC4xJmFtcDt1dG1fbWVkaXVtPWRpc3RyaWJ1dGUucGNfcmVsZXZhbnQubm9uZS10YXNrLWJsb2ctMn5kZWZhdWx0fkNUUkxJU1R+UmF0ZS0xLTgyNzI5MDI5LWJsb2ctNTQ2MDI1MTUucGNfcmVsZXZhbnRfcGF5Y29sdW1uX3YzJmFtcDtkZXB0aF8xLXV0bV9zb3VyY2U9ZGlzdHJpYnV0ZS5wY19yZWxldmFudC5ub25lLXRhc2stYmxvZy0yfmRlZmF1bHR+Q1RSTElTVH5SYXRlLTEtODI3MjkwMjktYmxvZy01NDYwMjUxNS5wY19yZWxldmFudF9wYXljb2x1bW5fdjMmYW1wO3V0bV9yZWxldmFudF9pbmRleD0y\">hexo 史上最全博客搭建</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL2RvY3Mvc2hhcmUvOGM4NWM0NDEtYWRjMC00NWE0LWFiODYtMDM0NGFiZGU4OTBjPyNVSTNSUw==\">Hexo+shoka 主题 + github 部署</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMTM0MzMyMzA/aXZrX3NhPTEwMjQzMjB1\">使用 zeit.co 托管 hexo 静态博客</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMTE3NzM4OTY=\">如何让百度收录 GitHub Pages 个人博客</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmp1YW5lcnR1LmNvbS9hcmNoaXZlcy85MDEzYzhkOC5odG1s\">Hexo 框架 (六)：SEO 优化及站点被搜索引擎收录设置</span></li>\n</ul>\n",
            "tags": [
                "网页搭建",
                "网页搭建",
                "问题总结"
            ]
        },
        {
            "id": "http://ranjingmo.github.io/2022/08/31/hello-world/",
            "url": "http://ranjingmo.github.io/2022/08/31/hello-world/",
            "title": "Hello World",
            "date_published": "2022-08-31T06:59:25.434Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}